<?xml version="1.0"?>
<rdf:RDF xmlns="http://www.semanticweb.org/design_pattern_ontology/base#"
     xml:base="http://www.semanticweb.org/design_pattern_ontology/base"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">
    <owl:Ontology rdf:about="http://www.semanticweb.org/design_pattern_ontology/base">
        <owl:versionIRI rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base/2.4.0"/>
        <dc:bibliographicCitation xml:lang="en">Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides,
Design patterns: elements of reusable object-oriented software. 1994
        </dc:bibliographicCitation>
        <dc:creator xml:lang="en">Igor Toujilov</dc:creator>
        <dc:description xml:lang="en">This is a base module of the ontology.
It contains common definitions used in other modules which should import this module.

This ontology is based on the book: E. Gamma, R. Helm, R. Johnson, J. Vlissides,
Design patterns (see the bibliographic citation annotation for the full reference).

Naming conventions used in this ontology follow the formalised rules described in details
in the MELO project: https://sourceforge.net/p/meloproject/wiki/formalised_naming_conventions/.
In short, ontological entities are named in natural language words as they are, i.e. without
changing the case, and underscores as word separators. The original noun entities from
the cited book are treated as proper nouns and their spelling is preserved. They are mostly
found in specific ontology modules, not in this base module.

Comments on the ontological entities, when they are needed to clarify their meanings,
follow the Doxygen format described in https://www.doxygen.nl/manual/docblocks.html/.
Usually, a comment consists of up to two parts: a human-readable single-line name of the entity,
followed by one or more sentences, describing the meaning.

This ontology uses the Semantic Versioning 2.0.0 policy, https://semver.org/.

How to Use This Ontology

This ontology module is just a base of a larger ontology consisting of several modules, devoted
to specific design patterns, importing this module. So, the usage of this module as stand-alone
is limited. However, there are three main use cases for more specific modules:

- Reading the formal conceptualisation of a design pattern helps to understand it properly
and unambiguously.

- Having your own existing design, you can specify it in terms of this ontology, then run
a reasoner and see matching standard design patterns.

- When you are targeting your new implementation of a design pattern, you can specify
the current implementation status in terms of this ontology and run a reasoner to check
the progress of your implementation.</dc:description>
        <dc:rights xml:lang="en">The MIT License

Copyright 2025 Igor Toujilov.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the `Software`), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED `AS IS`, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</dc:rights>
        <dc:title xml:lang="en">Design Pattern Ontology Base</dc:title>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/dc/elements/1.1/bibliographicCitation -->

    <owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/bibliographicCitation"/>
    


    <!-- http://purl.org/dc/elements/1.1/creator -->

    <owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/creator"/>
    


    <!-- http://purl.org/dc/elements/1.1/description -->

    <owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/description"/>
    


    <!-- http://purl.org/dc/elements/1.1/rights -->

    <owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/rights"/>
    


    <!-- http://purl.org/dc/elements/1.1/title -->

    <owl:AnnotationProperty rdf:about="http://purl.org/dc/elements/1.1/title"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#aggregates_instance -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#aggregates_instance">
        <rdfs:subPropertyOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#composes"/>
        <rdfs:comment xml:lang="en">Aggregates an instance.
Aggregation implies that the aggregator owns or is responsible for the aggregatee. In other words,
the aggregator has the aggregatee which is a part of the aggregator.
This also means that the aggregator and the aggregatee have identical lifetimes.
Aggregation is a stronger relationship than acquaintance and suggests tighter
coupling between the objects.</rdfs:comment>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#clones -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#clones">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#composes -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#composes">
        <rdfs:comment xml:lang="en">Composes.
In the object-oriented design the composition is opposed to the inheritance.</rdfs:comment>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#has_acquaintance -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#has_acquaintance">
        <rdfs:subPropertyOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#composes"/>
        <rdfs:comment xml:lang="en">Has an acquaintance.
Acquaintance implies that the subject merely knows of the object. Sometimes
this is called the &quot;association&quot; or &quot;using&quot; relationship. Acquainted objects may
request operations on each other but they are not responsible for each other.
This is a weaker relationship than aggregation and suggests looser coupling
between the objects.</rdfs:comment>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#inherits -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#inherits">
        <rdfs:domain rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class"/>
        <rdfs:range rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class"/>
    </owl:ObjectProperty>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#instantiates -->

    <owl:ObjectProperty rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#instantiates"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#abstract_class -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#abstract_class">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class"/>
        <owl:disjointWith rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#concrete_class"/>
        <rdfs:comment xml:lang="en">An abstract class.
In a software engineering implementation, this class cannot be instantiated. In an ontology, this class can be instantiated for meta-modelling purposes.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#behavioral_pattern_participant -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#behavioral_pattern_participant">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#design_pattern_participant"/>
        <rdfs:comment xml:lang="en">A behavioral pattern participant.
This is a participant of a pattern, having the primary purpose to design the
ways in which classes or objects interact and distribute responsibility.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#concrete_class -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#concrete_class">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class"/>
        <rdfs:comment xml:lang="en">A concrete class.
This class can be instantiated in a software engineering implementation and, for meta-modelling purposes, in an ontology.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#creational_pattern_participant -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#creational_pattern_participant">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#design_pattern_participant"/>
        <rdfs:comment xml:lang="en">A creational pattern participant.
This is a participant of a pattern, having the primary purpose of object creation.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#design_pattern_participant -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#design_pattern_participant">
        <rdfs:comment xml:lang="en">A design pattern participant.
This is a software engineering entity (an object-oriented class, an object, etc.)
which participates in a design pattern. Normally, an implementation of
a design pattern is composed of many interrelated and collaborating participants.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#object -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#object">
        <rdfs:comment xml:lang="en">An object.
This is a software engineering object instantiated at runtime.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class">
        <rdfs:comment xml:lang="en">An object-oriented class.
This is an artifact of software engineering.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#singleton -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#singleton">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#object-oriented_class"/>
        <rdfs:comment xml:lang="en">A singleton.
This is a class which can only have no more than a single instance of itself
during each runtime lifecycle.</rdfs:comment>
    </owl:Class>
    


    <!-- http://www.semanticweb.org/design_pattern_ontology/base#structural_pattern_participant -->

    <owl:Class rdf:about="http://www.semanticweb.org/design_pattern_ontology/base#structural_pattern_participant">
        <rdfs:subClassOf rdf:resource="http://www.semanticweb.org/design_pattern_ontology/base#design_pattern_participant"/>
        <rdfs:comment xml:lang="en">A structural pattern participant.
This is a participant of a pattern, having the primary purpose to compose
object-oriented classes.</rdfs:comment>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi -->

